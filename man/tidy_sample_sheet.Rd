% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_sample_sheet.R
\name{tidy_sample_sheet}
\alias{tidy_sample_sheet}
\title{tidy_sample_sheet}
\usage{
tidy_sample_sheet(
  master_sheet,
  sheet = 1,
  unique_id = NULL,
  sample_id = NULL,
  antibody,
  cell_line,
  single_end = FALSE,
  sample = NULL,
  treatment = NULL
)
}
\arguments{
\item{master_sheet}{A path to the master sample sheet file; Must be in either xlsx or csv format.}

\item{sheet}{Sheet (number or sting) to read}

\item{unique_id}{Either \code{NULL} or a character string specifying
the column name in the input sample sheet
that contains the \emph{unique_id} information. Note that \code{unique_id} and \code{sample_id} cannot be both NULL.}

\item{sample_id}{Either \code{NULL} or a character string specifying
the column name in the input sample sheet that contains
the \emph{sample_id} information. If NULL,
default to the concatenation of \code{unique_id}, \code{cell_line},
and \code{antibody}. Note that \code{unique_id} and \code{sample_id} cannot be both NULL.}

\item{antibody}{A character string specifying the column name
in the input sample sheet that contains the \emph{antibody} information.}

\item{cell_line}{A character string specifying column name in the
input sample sheet that contains of the \emph{cell_line} information.}

\item{single_end}{FALSE if the FASTQ is paired-end or TRUE is the FASTQ is single-ended.}

\item{sample}{A character string specifying the column name in the
input sample sheet that contains of the \emph{sample}
information. If NULL, default to the value in the
\code{cell_line} column.}

\item{treatment}{A character string specifying the column name
in the input sample sheet that contains of the
\emph{treatment} information.}
}
\value{
A data frame formatted specifically to cutandrun NextFlow
core pipeline sample sheet
}
\description{
Process the provied sample sheet by tidying and formatting it to allign the required columns of the `nf-core/cutandrun` pipeline.
}
\details{
The cutandrun NextFlow core pipeline requires a sample sheet
with six mandated columns: sample_id, sample, single_end,
target_or_control, read1, and read2. Note that \code{target_or_control}
is defined by \code{antibody}: if IgG, then "control", else "target".
The \code{read1} and \code{read2} columns can be prepared
by \code{get-fastq_path()} and be joined with the resulted
\code{data.frame} of this function. In addition, the \code{sample} column
groups the target and control samples; it is usually
the same as \code{cell_line}. The extra \code{cell_line}
and \code{antibody} columns are for CUNT&RUN-seq downstream
analysis. \code{unique_id} and \code{sample_id} cannot be
both NULL. If is is NULL, default to concatenation of
\code{unique_id}, \code{cell_line}, and \code{antibody}.
}
\examples{
\dontrun{
master_sheet <- file.path('/Users/cwo11/Projects/tidynoddy/inst/extdata',
                          'JFSe8_Free_CnR_Template.xlsx')
df <- tidy_sample_sheet(master_sheet,
                        sheet = 1,
                        unique_id = 'samp_name',
                        single_end = FALSE,
                        cell_line = 'Cell line',
                        antibody = 'Condition',
                        treatment = NULL,
                        sample = NULL)
# do some sanity check:
df

# the following is to make a complete Nextflow-specific sample sheet for cutandrun pipeline:
# 1. use get_fastq_path() and define sample_id or unique id
path <- "/archive/sarthy_j/FASTQs/240708_VH01189_307_AAFYY2YM5/Unaligned/Project_jsarthy"
fq_df <- get_fastq_path(path, pattern = "\\\\.fastq.gz$",
                        reads_pattern = "_R1|_R2",
                        read1_pattern = "_R1") \\%>\\%
  dplyr::mutate(unique_id = str_split(fq_sample_name, '-',
                                      simplify=TURE)[, 4])
# 2. inner join the results of get_fastq_path() and tidy_sample_sheet() by either 'sample_id' or 'unique_id'

nf_df <- df \%>\%
  inner_join(fq_df, by = 'unique_id')
nf
}

}
